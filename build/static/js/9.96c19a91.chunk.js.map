{"version":3,"sources":["application/Rank/style.js","application/Rank/index.js"],"names":["Container","styled","div","props","songcount","style","List","ul","globalRank","ListItem","li","tracks","length","SongList","connect","state","rankList","getIn","loading","dispatch","getRankListDataDispatch","getRankList","React","memo","list","toJS","useEffect","globalStartIndex","findGlobal","officialList","slice","globalList","renderRankList","global","map","item","key","coverImgId","onClick","history","push","id","enterDetail","className","src","coverImgUrl","alt","updateFrequency","index","first","second","renderSongList","displayStyle","display","renderRoutes","route","routes"],"mappings":"21DAGO,IAAMA,EAAYC,IAAOC,IAAV,KAGR,SAAAC,GAAK,OAAIA,EAAMC,UAAY,OAAQ,IAM5BC,IAAM,eACVA,IAAM,oBAIVC,EAAOL,IAAOM,GAAV,KAGF,SAAAJ,GAAK,OAAIA,EAAMK,WAAa,OAAS,KAIlCH,IAAM,qBAQXI,EAAWR,IAAOS,GAAV,KACN,SAACP,GAAD,OAAYA,EAAMQ,OAAOC,OAAS,OAAS,KAE3BP,IAAM,iBAEpB,SAACF,GAAD,OAAYA,EAAMQ,OAAOC,OAAS,OAAS,UAC1C,SAACT,GAAD,OAAYA,EAAMQ,OAAOC,OAAS,OAAS,SAoBpCP,IAAM,gBACVA,IAAM,qBAKdQ,EAAWZ,IAAOM,GAAV,IAOFF,IAAM,gB,gBCgCVS,uBAZS,SAACC,GAAD,MAAY,CAClCC,SAAUD,EAAME,MAAM,CAAC,OAAQ,aAC/BC,QAASH,EAAME,MAAM,CAAC,OAAQ,gBAGL,SAACE,GAC1B,MAAO,CACLC,wBADK,WAEHD,EAASE,mBAIAP,CAA6CQ,IAAMC,MA9FlE,SAAcpB,GAAQ,IACFqB,EAAkBrB,EAA5Ba,SAAgBE,EAAYf,EAAZe,QAChBE,EAA4BjB,EAA5BiB,wBAEJJ,EAAWQ,EAAOA,EAAKC,OAAS,GAEpCC,qBAAU,WACHV,EAASJ,QACZQ,MAED,IAEH,IAAIO,EAAmBC,YAAWZ,GAC9Ba,EAAeb,EAASc,MAAM,EAAGH,GACjCI,EAAaf,EAASc,MAAMH,GAsB1BK,EAAiB,SAACR,EAAMS,GAC5B,OACE,kBAAC3B,EAAD,CAAME,WAAYyB,GACfT,EAAKU,KAAI,SAACC,GACT,OACE,kBAAC1B,EAAD,CACE2B,IAAKD,EAAKE,WACV1B,OAAQwB,EAAKxB,OACb2B,QAAS,kBA5BD,SAACH,GACnBhC,EAAMoC,QAAQC,KAAd,gBAA4BL,EAAKM,KA2BRC,CAAYP,KAE3B,yBAAKQ,UAAU,eACb,yBAAKC,IAAKT,EAAKU,YAAaC,IAAI,KAChC,0BAAMH,UAAU,oBAAoBR,EAAKY,iBACzC,yBAAKJ,UAAU,cA7BN,SAACnB,GACtB,OAAOA,EAAKZ,OACV,kBAACC,EAAD,KACGW,EAAKU,KAAI,SAACC,EAAMa,GACf,OACE,wBAAIZ,IAAKY,GACNA,EAAQ,EADX,KACgBb,EAAKc,MADrB,MAC+Bd,EAAKe,YAMxC,KAmBOC,CAAehB,EAAKxB,cAQ7ByC,EAAelC,EAAU,CAAEmC,QAAS,QAAW,CAAEA,QAAS,IAE9D,OACE,kBAACrD,EAAD,CAAWI,UAAW,GACpB,kBAAC,IAAD,KACA,6BACE,wBAAIuC,UAAU,UAAUtC,MAAO+C,GAA/B,gBAGCpB,EAAeH,GAChB,wBAAIc,UAAU,SAAStC,MAAO+C,GAA9B,eAGCpB,EAAeD,GAAY,GAC3Bb,EAAU,kBAAC,IAAD,MAAsB,OAIlCoC,YAAanD,EAAMoD,MAAMC","file":"static/js/9.96c19a91.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport style from \"../../assets/global-style\";\n\nexport const Container = styled.div`\n    position: fixed;\n    top: 90px;\n    bottom: ${props => props.songcount ? \"60px\": 0};\n    width: 100%;\n    .offical,.global {\n        margin: 10px 5px;\n        padding-top: 15px;\n        font-weight: 700;\n        font-size: ${style[\"font-size-m\"]};\n        color: ${style[\"font-color-desc\"]};\n    }\n`;\n\nexport const List = styled.ul`\n    margin-top: 10px;\n    padding: 0 5px;\n    display: ${props => props.globalRank ? \"flex\" : \"\"};\n    flex-direction: row;\n    justify-content: space-between;\n    flex-wrap: wrap;\n    background: ${style[\"background-color\"]};\n    &::after{\n        content:\"\";\n        display:block;\n        width: 32vw;\n      }\n`;\n\nexport const ListItem = styled.li`\n    display: ${(props) => (props.tracks.length ? \"flex\" : \"\")};\n    padding: 3px 0;\n    border-bottom: 1px solid ${style[\"border-color\"]};\n    .img_wrapper {\n        width: ${(props) => (props.tracks.length ? \"27vw\" : \"32vw\")};\n        height: ${(props) => (props.tracks.length ? \"27vw\" : \"32vw\")};\n        border-radius: 3px;\n        position: relative;\n        .decorate {\n            position: absolute;\n            bottom: 0;\n            width: 100%;\n            height: 35px\n            border-radius: 3px\n            background: linear-gradient(hsla(0,0%,100%,0),hsla(0,0%,43%,.4));\n        }\n        img{\n            width:100%;\n            height:100%;\n            border-radius:3px;\n        }\n        .update-frequency{\n            position: absolute;\n            left: 7px;\n            bottom: 7px;\n            font-size: ${style[\"font-size-ss\"]};\n            color: ${style[\"font-color-light\"]};\n        }\n    }\n`;\n\nexport const SongList = styled.ul`\n  flex: 1;\n//   display: flex;\n  fkex-direction: column;\n  justify-content: space-around;\n  padding: 10px 10px;\n  >li{\n      font-size: ${style[\"font-size-s\"]};\n      color: grey;\n  }\n`;\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getRankList } from \"./store\";\nimport { findGlobal } from \"../../api/utils\";\nimport { renderRoutes } from \"react-router-config\";\nimport { SongList, List, ListItem, Container } from \"./style.js\";\nimport Scroll from \"../../baseUI/scroll/index\";\nimport Loading from \"../../baseUI/loading\";\n\nfunction Rank(props) {\n  const { rankList: list, loading } = props;\n  const { getRankListDataDispatch } = props;\n\n  let rankList = list ? list.toJS() : [];\n\n  useEffect(() => {\n    if (!rankList.length) {\n      getRankListDataDispatch();\n    }\n  }, []);\n\n  let globalStartIndex = findGlobal(rankList);\n  let officialList = rankList.slice(0, globalStartIndex);\n  let globalList = rankList.slice(globalStartIndex);\n\n  const enterDetail = (item) => {\n    props.history.push(`/rank/${item.id}`);\n  };\n\n  const renderSongList = (list) => {\n    return list.length ? (\n      <SongList>\n        {list.map((item, index) => {\n          return (\n            <li key={index}>\n              {index + 1}. {item.first} x {item.second}\n            </li>\n          );\n          // seriously?? index as key???\n        })}\n      </SongList>\n    ) : null;\n  };\n\n  //global as a flag\n  const renderRankList = (list, global) => {\n    return (\n      <List globalRank={global}>\n        {list.map((item) => {\n          return (\n            <ListItem\n              key={item.coverImgId}\n              tracks={item.tracks}\n              onClick={() => enterDetail(item)}\n            >\n              <div className=\"img_wrapper\">\n                <img src={item.coverImgUrl} alt=\"\" />\n                <span className=\"update-frequency\">{item.updateFrequency}</span>\n                <div className=\"decorate\"></div>\n              </div>\n              {renderSongList(item.tracks)}\n            </ListItem>\n          );\n        })}\n      </List>\n    );\n  };\n\n  let displayStyle = loading ? { display: \"none\" } : { display: \"\" };\n\n  return (\n    <Container songcount={1}>\n      <Scroll>\n      <div>\n        <h1 className=\"offical\" style={displayStyle}>\n          Offical Rank\n        </h1>\n        {renderRankList(officialList)}\n        <h1 className=\"global\" style={displayStyle}>\n          Global Rank\n        </h1>\n        {renderRankList(globalList, true)}\n        {loading ? <Loading></Loading> : null}\n        {/* TODO: <EnterLoading></EnterLoading> */}\n      </div>\n      </Scroll>\n      {renderRoutes(props.route.routes)}\n    </Container>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  rankList: state.getIn([\"rank\", \"rankList\"]),\n  loading: state.getIn([\"rank\", \"loading\"]),\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getRankListDataDispatch() {\n      dispatch(getRankList());\n    },\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(React.memo(Rank));\n"],"sourceRoot":""}